// Generated by CoffeeScript 1.4.0
var AggregateWorker, Worker,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Worker = require('./worker');

AggregateWorker = (function(_super) {

  __extends(AggregateWorker, _super);

  AggregateWorker.prototype._id = "aggregate_worker";

  function AggregateWorker(aggregator) {
    this.aggregator = aggregator;
    AggregateWorker.__super__.constructor.call(this);
    this._initEmitter();
  }

  AggregateWorker.prototype._initEmitter = function() {
    var _this = this;
    return this.aggregator.on("data:new", function(data) {
      return _this.emit("data:new", data);
    });
  };

  AggregateWorker.prototype.process = function(data) {
    try {
      return this.aggregator.process(data);
    } catch (e) {
      if (e) {
        return console.log("" + this._id + " error: " + e);
      }
    }
  };

  return AggregateWorker;

})(Worker);

module.exports = AggregateWorker;
