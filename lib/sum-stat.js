// Generated by CoffeeScript 1.3.3
var Stat, SumStat,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Stat = require('./stat');

SumStat = (function(_super) {

  __extends(SumStat, _super);

  function SumStat() {
    return SumStat.__super__.constructor.apply(this, arguments);
  }

  SumStat.prototype.id = "sum_stat";

  SumStat.prototype.defaultOutputName = "sum";

  SumStat.prototype.accumulate = function(currentAggregateValue, newValue) {
    return currentAggregateValue + newValue;
  };

  SumStat.prototype.offset = function(currentAggregateValue, oldValue) {
    return currentAggregateValue - oldValue;
  };

  return SumStat;

})(Stat);

module.exports = SumStat;
