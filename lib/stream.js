// Generated by CoffeeScript 1.3.3
var Connect, Stream,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Connect = require('./connect');

Stream = (function(_super) {

  __extends(Stream, _super);

  function Stream(stream, id, topology) {
    Stream.__super__.constructor.call(this, stream, null, id, topology);
  }

  Stream.prototype.process = function(data) {
    return this._emit(data);
  };

  return Stream;

})(Connect);

module.exports = Stream;
