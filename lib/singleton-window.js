// Generated by CoffeeScript 1.4.0
var SingletoneWindow, Window,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Window = require('./window');

/*
#
# Windows accumulate a subset of a stream. Each window must
# implement the process method and emit "event:push" and "event:pop" events
#
*/


SingletoneWindow = (function(_super) {

  __extends(SingletoneWindow, _super);

  function SingletoneWindow() {
    SingletoneWindow.__super__.constructor.call(this);
    this._event = null;
  }

  SingletoneWindow.prototype.events = function() {
    if (this._event) {
      return [this._event];
    } else {
      return [];
    }
  };

  SingletoneWindow.prototype.size = function() {
    if (this._event) {
      return 1;
    } else {
      return 0;
    }
  };

  SingletoneWindow.prototype.process = function(data) {
    if (this._event) {
      this.emit("data:pop", [this._event]);
    }
    this._event = data;
    return this.emit("data:push", [data]);
  };

  return SingletoneWindow;

})(Window);

module.exports = SingletoneWindow;
