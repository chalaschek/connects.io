// Generated by CoffeeScript 1.3.3
var CountStat, Stat,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Stat = require('./stat');

CountStat = (function(_super) {

  __extends(CountStat, _super);

  function CountStat() {
    return CountStat.__super__.constructor.apply(this, arguments);
  }

  CountStat.prototype.id = "count_stat";

  CountStat.prototype.defaultOutputName = "count";

  CountStat.prototype.accumulate = function(currentAggregateValue, newValue) {
    return currentAggregateValue + 1;
  };

  CountStat.prototype.offset = function(currentAggregateValue, oldValue) {
    return currentAggregateValue - 1;
  };

  return CountStat;

})(Stat);

module.exports = CountStat;
