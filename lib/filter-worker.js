// Generated by CoffeeScript 1.3.3
var FilterWorker, Worker,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Worker = require('./worker');

FilterWorker = (function(_super) {

  __extends(FilterWorker, _super);

  FilterWorker.prototype._id = "filter_worker";

  function FilterWorker(operator) {
    this.operator = operator;
    FilterWorker.__super__.constructor.call(this);
  }

  FilterWorker.prototype.process = function(data) {
    var _this = this;
    try {
      return this.operator(data, function(error, data) {
        if (data) {
          return _this.emit("data:new", data);
        }
      });
    } catch (e) {
      if (e) {
        return console.log("" + this._id + " error: " + e);
      }
    }
  };

  return FilterWorker;

})(Worker);

module.exports = FilterWorker;
