// Generated by CoffeeScript 1.3.3
var MemoryStore, Store,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Store = (function() {

  function Store() {}

  Store.prototype.get = function(key, callback) {
    throw new Error("Method must be implemented");
  };

  Store.prototype.put = function(key, value, callback) {
    throw new Error("Method must be implemented");
  };

  Store.prototype["delete"] = function(key, callback) {
    throw new Error("Method must be implemented");
  };

  return Store;

})();

MemoryStore = (function(_super) {

  __extends(MemoryStore, _super);

  function MemoryStore() {
    this._store = {};
  }

  MemoryStore.prototype.get = function(key, callback) {
    return callback(null, this._store[key]);
  };

  MemoryStore.prototype.put = function(key, value, callback) {
    this._store[key] = value;
    return callback();
  };

  MemoryStore.prototype["delete"] = function(key, callback) {
    delete this._store[key];
    return callback();
  };

  return MemoryStore;

})(Store);

module.exports = {
  Store: Store,
  MemoryStore: MemoryStore
};
