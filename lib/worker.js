// Generated by CoffeeScript 1.4.0
var EventEmitter, Worker,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

Worker = (function(_super) {

  __extends(Worker, _super);

  function Worker() {
    return Worker.__super__.constructor.apply(this, arguments);
  }

  Worker.prototype.process = function(data) {
    throw new Error("Workers must implement process method");
  };

  return Worker;

})(EventEmitter);

module.exports = Worker;
