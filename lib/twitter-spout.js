// Generated by CoffeeScript 1.3.3
var Spout, Twit, TwitterSpout,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Spout = require("./spout");

Twit = require('twit');

TwitterSpout = (function(_super) {

  __extends(TwitterSpout, _super);

  function TwitterSpout(twitterConfig) {
    var _this = this;
    this._count = 0;
    TwitterSpout.__super__.constructor.call(this);
    this._twitter = new Twit(twitterConfig);
    console.log("Connecting to Twitter");
    this._stream = this._twitter.stream('statuses/filter', {
      track: ["#rice", "#lol"].join(",")
    });
    this._stream.on('tweet', function(tweet) {
      _this._count++;
      return _this.emit("event:new", tweet);
    });
    this._stream.on('warning', function() {
      return console.log("warning");
    });
    this._stream.on('connect', function(response) {
      return console.log("connected");
    });
    this._stream.on('disconnect', function(response) {
      console.log(response);
      return console.log("disconnect");
    });
    this._stream.on('limit', function(response) {
      console.log(response);
      return console.log("limit");
    });
    this._stream.on('reconnect', function(response) {
      console.log(response);
      return console.log("reconnect");
    });
    this._stream.on('disconnect', function(response) {
      console.log(response);
      return console.log("disconnect");
    });
    this._stream.on('disconnect', function(response) {
      console.log(response);
      return console.log("disconnect");
    });
  }

  return TwitterSpout;

})(Spout);

module.exports = TwitterSpout;
